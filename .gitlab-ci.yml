# This file is a template, and might need editing before it works on your project.
---
# All available Hugo versions are listed here:
# https://gitlab.com/pages/hugo/container_registry
image: registry.gitlab.com/pages/hugo/hugo_extended:0.120.3

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.install_dependencies:
  script:
    - apk update
    - apk --no-cache add git go
    - "command -v git || exit 1"
    - "go version || exit 1"

.npm_ci:
  script:
    - apk add nodejs npm
    - npm ci

.fetch_posts:
  script:
    - "git --version || exit 1"
    - "git clone https://oauth2:$ACCESS_TOKEN@gitlab.com/noritakaIzumi/my-portfolio-posts.git || exit 1"
    - "rm -rf my-portfolio-posts/.git || exit 1"
    - "mv my-portfolio-posts content || exit 1"

.hugo_build:
  script:
    # https://github.com/gohugoio/hugo/issues/8025
    - |
      env HUGO_PARAMS_FEATURES_COMMENT_SERVICES_GISCUS_REPOID=$GISCUS_REPOID \
        env HUGO_PARAMS_FEATURES_COMMENT_SERVICES_GISCUS_CATEGORY=$GISCUS_CATEGORY \
        env HUGO_PARAMS_FEATURES_COMMENT_SERVICES_GISCUS_CATEGORYID=$GISCUS_CATEGORYID \
        hugo --logLevel info --minify --cleanDestinationDir --gc
  after_script:
    # check there is no empty images
    - test $(find public/images/ -type f -exec stat -c '%s' {} \; | grep '^0$' | wc -l) = 0 || exit 1

hugo:
  stage: build
  script:
    - !reference [.install_dependencies, script]
    - !reference [.npm_ci, script]
    - !reference [.fetch_posts, script]
    - !reference [.hugo_build, script]
  after_script:
    - !reference [.hugo_build, after_script]
  artifacts:
    untracked: true
  except:
    - master

pages:
  stage: build
  script:
    - !reference [.install_dependencies, script]
    - !reference [.npm_ci, script]
    - !reference [.fetch_posts, script]
    - !reference [.hugo_build, script]
  after_script:
    - !reference [.hugo_build, after_script]
  artifacts:
    paths:
      - public
  only:
    - master

e2e:
  stage: test
  before_script:
    - !reference [.install_dependencies, script]
    - !reference [.npm_ci, script]
    - npm install -g http-server
    - npx playwright install --with-deps
  script:
    - npm run test
  artifacts:
    when: always
    paths:
      - ./test-results/e2e-test-results.xml
    reports:
      junit:
        - ./test-results/e2e-test-results.xml
